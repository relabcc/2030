{"version":3,"sources":["webpack:///./node_modules/react-measure/dist/index.esm.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///./node_modules/core-js/modules/es6.reflect.has.js","webpack:///./node_modules/lodash/isEmpty.js","webpack:///./node_modules/lodash/isString.js","webpack:///./node_modules/lodash/conformsTo.js","webpack:///./node_modules/hoist-non-react-statics/node_modules/react-is/index.js","webpack:///./node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","webpack:///./node_modules/lodash/_baseConformsTo.js","webpack:///./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"names":["__webpack_require__","d","__webpack_exports__","withContentRect","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_4__","prop_types__WEBPACK_IMPORTED_MODULE_4___default","n","resize_observer_polyfill__WEBPACK_IMPORTED_MODULE_5__","types","getTypes","props","allowedTypes","forEach","type","push","WrappedComponent","_class","_temp","_Component","WithContentRect","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","state","contentRect","entry","client","offset","scroll","bounds","margin","_animationFrameID","_resizeObserver","_node","measure","entries","node","calculations","indexOf","top","clientTop","left","clientLeft","width","clientWidth","height","clientHeight","offsetTop","offsetLeft","offsetWidth","offsetHeight","scrollTop","scrollLeft","scrollWidth","scrollHeight","rect","getBoundingClientRect","right","bottom","styles","getComputedStyle","parseInt","marginTop","marginRight","marginBottom","marginLeft","getContentRect","window","requestAnimationFrame","setState","onResize","_handleRef","observe","unobserve","innerRef","current","Object","_proto","prototype","componentDidMount","componentWillUnmount","disconnect","cancelAnimationFrame","render","_this$props","measureRef","propTypes","a","bool","oneOfType","object","func","Measure","_ref","children","displayName","dP","f","FProto","Function","nameRE","configurable","get","match","e","_ReactIs$ForwardRef","_defineProperty","obj","key","value","defineProperty","enumerable","writable","ReactIs","REACT_STATICS","childContextTypes","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromProps","mixins","KNOWN_STATICS","name","caller","callee","arity","TYPE_STATICS","ForwardRef","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","targetStatics","sourceStatics","i","descriptor","$export","S","has","target","propertyKey","baseKeys","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","mapTag","setTag","hasOwnProperty","splice","tag","size","baseGetTag","isObjectLike","stringTag","baseConformsTo","source","b","Symbol","for","c","g","h","k","l","m","q","p","$$typeof","typeOf","AsyncMode","ContextConsumer","ContextProvider","Element","Fragment","Profiler","Portal","StrictMode","isValidElementType","then","isAsyncMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isProfiler","isPortal","isStrictMode","predicate","undefined","global","MapShim","Map","getIndex","arr","result","some","index","class_1","__entries__","set","delete","clear","callback","ctx","_i","_a","isBrowser","document","global$1","Math","self","requestAnimationFrame$1","bind","setTimeout","Date","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","attributes","childList","characterData","subtree","removeEventListener","_b","propertyName","getInstance","instance_","defineConfigurable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","positions","reduce","position","getHTMLElementContentRect","paddings","positions_1","getPaddings","horizPad","vertPad","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","broadcastRect","ResizeObserverEntry","rectInit","Constr","DOMRectReadOnly","create","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","observations","clearActive","observation","map","WeakMap","ResizeObserver","method"],"mappings":"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","file":"1-adbfb0f7ce61826f6b87.js","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { Component, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nvar types = ['client', 'offset', 'scroll', 'bounds', 'margin'];\nfunction getTypes(props) {\n  var allowedTypes = [];\n  types.forEach(function (type) {\n    if (props[type]) {\n      allowedTypes.push(type);\n    }\n  });\n  return allowedTypes;\n}\n\nfunction getContentRect(node, types) {\n  var calculations = {};\n\n  if (types.indexOf('client') > -1) {\n    calculations.client = {\n      top: node.clientTop,\n      left: node.clientLeft,\n      width: node.clientWidth,\n      height: node.clientHeight\n    };\n  }\n\n  if (types.indexOf('offset') > -1) {\n    calculations.offset = {\n      top: node.offsetTop,\n      left: node.offsetLeft,\n      width: node.offsetWidth,\n      height: node.offsetHeight\n    };\n  }\n\n  if (types.indexOf('scroll') > -1) {\n    calculations.scroll = {\n      top: node.scrollTop,\n      left: node.scrollLeft,\n      width: node.scrollWidth,\n      height: node.scrollHeight\n    };\n  }\n\n  if (types.indexOf('bounds') > -1) {\n    var rect = node.getBoundingClientRect();\n    calculations.bounds = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    };\n  }\n\n  if (types.indexOf('margin') > -1) {\n    var styles = getComputedStyle(node);\n    calculations.margin = {\n      top: styles ? parseInt(styles.marginTop) : 0,\n      right: styles ? parseInt(styles.marginRight) : 0,\n      bottom: styles ? parseInt(styles.marginBottom) : 0,\n      left: styles ? parseInt(styles.marginLeft) : 0\n    };\n  }\n\n  return calculations;\n}\n\nfunction withContentRect(types) {\n  return function (WrappedComponent) {\n    var _class, _temp;\n\n    return _temp = _class =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(WithContentRect, _Component);\n\n      function WithContentRect() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n        _this.state = {\n          contentRect: {\n            entry: {},\n            client: {},\n            offset: {},\n            scroll: {},\n            bounds: {},\n            margin: {}\n          }\n        };\n        _this._animationFrameID = null;\n        _this._resizeObserver = null;\n        _this._node = null;\n\n        _this.measure = function (entries) {\n          var contentRect = getContentRect(_this._node, types || getTypes(_this.props));\n\n          if (entries) {\n            contentRect.entry = entries[0].contentRect;\n          }\n\n          _this._animationFrameID = window.requestAnimationFrame(function () {\n            if (_this._resizeObserver !== null) {\n              _this.setState({\n                contentRect: contentRect\n              });\n            }\n          });\n\n          if (typeof _this.props.onResize === 'function') {\n            _this.props.onResize(contentRect);\n          }\n        };\n\n        _this._handleRef = function (node) {\n          if (_this._resizeObserver !== null) {\n            if (node !== null) {\n              _this._resizeObserver.observe(node);\n            } else {\n              _this._resizeObserver.unobserve(_this._node);\n            }\n          }\n\n          _this._node = node;\n          var innerRef = _this.props.innerRef;\n\n          if (innerRef) {\n            if (typeof innerRef === 'function') {\n              innerRef(node);\n            } else {\n              innerRef.current = node;\n            }\n          }\n        };\n\n        return _this;\n      }\n\n      var _proto = WithContentRect.prototype;\n\n      _proto.componentDidMount = function componentDidMount() {\n        this._resizeObserver = new ResizeObserver(this.measure);\n\n        if (this._node !== null) {\n          this._resizeObserver.observe(this._node);\n        }\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        if (this._resizeObserver !== null) {\n          this._resizeObserver.disconnect();\n\n          this._resizeObserver = null;\n        }\n\n        window.cancelAnimationFrame(this._animationFrameID);\n      };\n\n      _proto.render = function render() {\n        var _this$props = this.props,\n            innerRef = _this$props.innerRef,\n            onResize = _this$props.onResize,\n            props = _objectWithoutPropertiesLoose(_this$props, [\"innerRef\", \"onResize\"]);\n\n        return createElement(WrappedComponent, _extends({}, props, {\n          measureRef: this._handleRef,\n          measure: this.measure,\n          contentRect: this.state.contentRect\n        }));\n      };\n\n      return WithContentRect;\n    }(Component), _class.propTypes = {\n      client: PropTypes.bool,\n      offset: PropTypes.bool,\n      scroll: PropTypes.bool,\n      bounds: PropTypes.bool,\n      margin: PropTypes.bool,\n      innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n      onResize: PropTypes.func\n    }, _temp;\n  };\n}\n\nvar Measure = withContentRect()(function (_ref) {\n  var measure = _ref.measure,\n      measureRef = _ref.measureRef,\n      contentRect = _ref.contentRect,\n      children = _ref.children;\n  return children({\n    measure: measure,\n    measureRef: measureRef,\n    contentRect: contentRect\n  });\n});\nMeasure.displayName = 'Measure';\nMeasure.propTypes.children = PropTypes.func;\n\nexport default Measure;\nexport { withContentRect };\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\n\nvar _ReactIs$ForwardRef;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar ReactIs = require('react-is');\nvar React = require('react');\nvar REACT_STATICS = {\n    childContextTypes: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    getDerivedStateFromProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\n\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    callee: true,\n    arguments: true,\n    arity: true\n};\n\nvar TYPE_STATICS = _defineProperty({}, ReactIs.ForwardRef, (_ReactIs$ForwardRef = {}, _defineProperty(_ReactIs$ForwardRef, '$$typeof', true), _defineProperty(_ReactIs$ForwardRef, 'render', true), _ReactIs$ForwardRef));\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== 'string') {\n        // don't hoist over string (html) components\n\n        if (objectPrototype) {\n            var inheritedComponent = getPrototypeOf(sourceComponent);\n            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n            }\n        }\n\n        var keys = getOwnPropertyNames(sourceComponent);\n\n        if (getOwnPropertySymbols) {\n            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n        }\n\n        var targetStatics = TYPE_STATICS[targetComponent['$$typeof']] || REACT_STATICS;\n        var sourceStatics = TYPE_STATICS[sourceComponent['$$typeof']] || REACT_STATICS;\n\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                try {\n                    // Avoid failures from read-only properties\n                    defineProperty(targetComponent, key, descriptor);\n                } catch (e) {}\n            }\n        }\n\n        return targetComponent;\n    }\n\n    return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","// 26.1.9 Reflect.has(target, propertyKey)\nvar $export = require('./_export');\n\n$export($export.S, 'Reflect', {\n  has: function has(target, propertyKey) {\n    return propertyKey in target;\n  }\n});\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var baseConformsTo = require('./_baseConformsTo'),\n    keys = require('./keys');\n\n/**\n * Checks if `object` conforms to `source` by invoking the predicate\n * properties of `source` with the corresponding property values of `object`.\n *\n * **Note:** This method is equivalent to `_.conforms` when `source` is\n * partially applied.\n *\n * @static\n * @memberOf _\n * @since 4.14.0\n * @category Lang\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property predicates to conform to.\n * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n *\n * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n * // => true\n *\n * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n * // => false\n */\nfunction conformsTo(object, source) {\n  return source == null || baseConformsTo(object, source, keys(source));\n}\n\nmodule.exports = conformsTo;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.5.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.forward_ref\"):60112,n=b?Symbol.for(\"react.placeholder\"):60113;\nfunction q(a){if(\"object\"===typeof a&&null!==a){var p=a.$$typeof;switch(p){case c:switch(a=a.type,a){case l:case e:case g:case f:return a;default:switch(a=a&&a.$$typeof,a){case k:case m:case h:return a;default:return p}}case d:return p}}}exports.typeOf=q;exports.AsyncMode=l;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=m;exports.Fragment=e;exports.Profiler=g;exports.Portal=d;exports.StrictMode=f;\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===l||a===g||a===f||a===n||\"object\"===typeof a&&null!==a&&(\"function\"===typeof a.then||a.$$typeof===h||a.$$typeof===k||a.$$typeof===m)};exports.isAsyncMode=function(a){return q(a)===l};exports.isContextConsumer=function(a){return q(a)===k};exports.isContextProvider=function(a){return q(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};\nexports.isForwardRef=function(a){return q(a)===m};exports.isFragment=function(a){return q(a)===e};exports.isProfiler=function(a){return q(a)===g};exports.isPortal=function(a){return q(a)===d};exports.isStrictMode=function(a){return q(a)===f};\n","/**\n * The base implementation of `_.conformsTo` which accepts `props` to check.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property predicates to conform to.\n * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n */\nfunction baseConformsTo(object, source, props) {\n  var length = props.length;\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (length--) {\n    var key = props[length],\n        predicate = source[key],\n        value = object[key];\n\n    if ((value === undefined && !(key in object)) || !predicate(value)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseConformsTo;\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n"],"sourceRoot":""}